Tara has been assigned a task by her friends to retrieve a character that appears most number of the times in a given sequence.If the frequency of two or more characters is same than return the first character that occurs in the string among them.
Input Format
A string literal
Constraints
The string will contain only characters, from the ranges ('a'-z',A-Z,0'-9'), else "Error"
Output Format
The character occuring maximum number of times


import java.util.Scanner;
public class Main {
  public static void main(String[] args) {
    Scanner input = new Scanner(System.in);
    String str = input.nextLine();
    if (!str.matches("[a-zA-Z0-9]+")) {
      System.out.println("Error");
      return;    }
    int[] count = new int[256]; 
    int maxCount = 0;
    char maxChar = '\0';
    for (int i = 0; i < str.length(); i++) {
      char ch = str.charAt(i);
      count[ch]++;
      if (count[ch] > maxCount || (count[ch] == maxCount && ch < maxChar)) {
        maxCount = count[ch];
        maxChar = ch;
      } }
    System.out.println("Maximum occurring character is: " + maxChar);
  }}
  
  
  
 Aviraj and Viraj are playing a game. Viraj shared a statement with Aviraj. Viraj wants Avraj to tell word count having length N. Help Viraj by developing a program.
Input Format
First line will contain a statement. Second line will contain value of N.
Constraints
N should not be greater than 10 or less than 1 else "Invalid Input"
Output Format
One integer value representing count of words with length N


import java.util.Scanner;

public class WordCount {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        String statement = sc.nextLine();
        
        int N = sc.nextInt();
        
        if (N < 1 || N > 10) {
            System.out.println("Invalid Input");
            return;
        }
        
        String[] words = statement.split(" ");
        
        int count = 0;
        for (String word : words) {
            if (word.length() == N) {
                count++;
            }
        }
        
        System.out.println(""  + count);
    }

}
